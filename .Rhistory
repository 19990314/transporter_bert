load("~/Library/CloudStorage/GoogleDrive-schen601@usc.edu/My Drive/transportor/mouse_final_integeration_02162023.RData")
load("~/Library/CloudStorage/GoogleDrive-schen601@usc.edu/My Drive/transportor/transporter_bert/02182025.rds")
setwd("~/Library/CloudStorage/GoogleDrive-schen601@usc.edu/My Drive/transportor/transporter_bert")
combined_cell@meta.data$organ
unique(combined_cell@meta.data$organ)
View(all.markers)
pull(gene)
# Load required library
library(dplyr)
# Define the list of candidate genes (replace with your actual list)
candidates <- c(deg_v_plot1, deg_v_plot2, deg_v_plot3)  # Example candidate genes
# Define the required organ conditions
required_organs <- c("Brain", "Bladder", "Liver", "Heart", "Intestine",
"Colon", "Testis", "Muscle", "Lung", "Spleen", "Kidney")
# Filter for candidate genes only
all.markers.filtered.by.candidates <- all.markers %>%
filter(gene %in% candidates)
# Count how many unique organs each gene appears in
gene_organ_count <- all.markers.filtered.by.candidates %>%
group_by(gene) %>%
summarize(organs_present = list(unique(cluster)), count = n())
View(gene_organ_count)
# Check which genes appear in **all 10 organs**
genes_fully_present <- gene_organ_count %>%
filter(all(required_organs %in% organs_present)) %>%
pull(gene)  # Extract the gene names
# Print results
print("Genes found in all 10 organs:")
print(genes_fully_present)
View(all.markers)
View(all.markers.filtered.by.candidates)
# Transform p-value so larger dots represent significant genes
deg_table <- all.markers.filtered.by.candidates %>%
mutate(p_size = -log10(p_val))  # Transform P-value
# Create the dot plot
dot_plot <- ggplot(deg_table, aes(x = organ, y = gene)) +
geom_point(aes(size = p_size, color = avg_log2FC)) +  # Dot size = -log10(p_val), Color = log2FC
scale_size_continuous(range = c(2, 10)) +  # Adjust dot size range
scale_color_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +  # Color gradient
theme_minimal() +
labs(x = "Organ", y = "Gene", size = "-log10(P-value)", color = "Log2 Fold Change") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
# Create the dot plot
dot_plot <- ggplot(deg_table, aes(x = organ, y = gene)) +
geom_point(aes(size = p_size, color = avg_log2FC)) +  # Dot size = -log10(p_val), Color = log2FC
scale_size_continuous(range = c(2, 10)) +  # Adjust dot size range
scale_color_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +  # Color gradient
theme_minimal() +
labs(x = "Organ", y = "Gene", size = "-log10(P-value)", color = "Log2 Fold Change") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Display the plot
print(dot_plot)
View(deg_table)
ot_plot <- ggplot(deg_table, aes(x = cluster, y = gene)) +
geom_point(aes(size = p_size, color = avg_log2FC)) +  # Dot size = -log10(p_val), Color = log2FC
scale_size_continuous(range = c(2, 10)) +  # Adjust dot size range
scale_color_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +  # Color gradient
theme_minimal() +
labs(x = "Organ", y = "Gene", size = "-log10(P-value)", color = "Log2 Fold Change") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
dot_plot <- ggplot(deg_table, aes(x = cluster, y = gene)) +
geom_point(aes(size = p_size, color = avg_log2FC)) +  # Dot size = -log10(p_val), Color = log2FC
scale_size_continuous(range = c(2, 10)) +  # Adjust dot size range
scale_color_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +  # Color gradient
theme_minimal() +
labs(x = "Organ", y = "Gene", size = "-log10(P-value)", color = "Log2 Fold Change") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(dot_plot)
View(deg_table)
# Transform p-value
deg_table <- all.markers.filtered.by.candidates %>%
mutate(p_size = -log10(p_val+0.000001))  # Transform P-value
# Create the dot plot
dot_plot <- ggplot(deg_table, aes(x = cluster, y = gene)) +
geom_point(aes(size = p_size, color = avg_log2FC)) +  # Dot size = -log10(p_val), Color = log2FC
scale_size_continuous(range = c(2, 10)) +  # Adjust dot size range
scale_color_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +  # Color gradient
theme_minimal() +
labs(x = "Organ", y = "Gene", size = "-log10(P-value)", color = "Log2 Fold Change") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Display the plot
print(dot_plot)
# Transform p-value
deg_table <- all.markers.filtered.by.candidates %>%
mutate(p_size = -log10(p_val+0.000000000000000000000000000000000000000000000001))  # Transform P-value
# Create the dot plot
dot_plot <- ggplot(deg_table, aes(x = cluster, y = gene)) +
geom_point(aes(size = p_size, color = avg_log2FC)) +  # Dot size = -log10(p_val), Color = log2FC
scale_size_continuous(range = c(2, 10)) +  # Adjust dot size range
scale_color_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +  # Color gradient
theme_minimal() +
labs(x = "Organ", y = "Gene", size = "-log10(P-value)", color = "Log2 Fold Change") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Display the plot
print(dot_plot)
# Load required libraries
library(ggplot2)
#library(dplyr)
# Transform p-value
deg_table <- all.markers.filtered.by.candidates %>%
mutate(p_size = -log10(p_val+0.00000000000000000000000000000000000000000000000000000000000001))  # Transform P-value
# Create the dot plot
dot_plot <- ggplot(deg_table, aes(x = cluster, y = gene)) +
geom_point(aes(size = p_size, color = avg_log2FC)) +  # Dot size = -log10(p_val), Color = log2FC
scale_size_continuous(range = c(2, 10)) +  # Adjust dot size range
scale_color_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +  # Color gradient
theme_minimal() +
labs(x = "Organ", y = "Gene", size = "-log10(P-value)", color = "Log2 Fold Change") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Display the plot
print(dot_plot)
# Load required libraries
library(ggplot2)
#library(dplyr)
# Transform p-value
deg_table <- all.markers.filtered.by.candidates %>%
mutate(p_size = -log10(p_val+0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000001))  # Transform P-value
# Create the dot plot
dot_plot <- ggplot(deg_table, aes(x = cluster, y = gene)) +
geom_point(aes(size = p_size, color = avg_log2FC)) +  # Dot size = -log10(p_val), Color = log2FC
scale_size_continuous(range = c(1, 8)) +  # Adjust dot size range
scale_color_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +  # Color gradient
theme_minimal() +
labs(x = "Organ", y = "Gene", size = "-log10(P-value)", color = "Log2 Fold Change") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Display the plot
print(dot_plot)
# Create the dot plot
dot_plot <- ggplot(deg_table, aes(x = cluster, y = gene)) +
geom_point(aes(size = p_size, color = avg_log2FC)) +  # Dot size = -log10(p_val), Color = log2FC
scale_size_continuous(range = c(1, 8)) +  # Adjust dot size range
scale_color_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +  # Color gradient
labs(x = "Organ", y = "Gene", size = "-log10(P-value)", color = "Log2 Fold Change") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Display the plot
print(dot_plot)
setwd("~/Library/CloudStorage/GoogleDrive-schen601@usc.edu/My Drive/transportor/transporter_bert")
setwd("~/Library/CloudStorage/GoogleDrive-schen601@usc.edu/My Drive/transportor/transporter_bert")
setwd("~/Library/CloudStorage/GoogleDrive-schen601@usc.edu/My Drive/transportor/transporter_bert")
brain.markers.sandra <- read_csv("Brain_EC_markers_fc1_padj005.csv")
library(readr)
brain.markers.sandra <- read_csv("Brain_EC_markers_fc1_padj005.csv")
View(brain.markers.sandra)
slc_targets.sandra <- intersect(tolower(gene_symbols), tolower(brain.markers.sandra$Gene))
slc_targets.sandra <- intersect(tolower(gene_symbols_slc), tolower(brain.markers.sandra$Gene))
DotPlot(combined_cell, features = slc_targets.sandra, group.by = "organ")
brain.markers.sandra <- brain.markers.sandra[(brain.markers.sandra$p_val<pv & abs(brain.markers.sandra$avg_log2FC) > fc_thres),]
brain.markers.sandra <- brain.markers.sandra[(((brain.markers.sandra$avg_log2FC > fc_thres)&(brain.markers.sandra$pct.1>pct_thres))|((brain.markers.sandra$avg_log2FC < -fc_thres)&(brain.markers.sandra$pct.2>pct_thres))),]
slc_targets.sandra <- intersect(tolower(gene_symbols_slc), tolower(brain.markers.sandra$Gene))
brain.markers.sandra <- read_csv("Brain_EC_markers_fc1_padj005.csv")
View(brain.markers.sandra)
slc_targets.sandra <- intersect(tolower(gene_symbols_slc), tolower(brain.markers.sandra$Gene))
filtered.brain.markers.sandra <- brain.markers.sandra %>% filter(tolower(Gene) %in% slc_targets.sandra)
View(filtered.brain.markers.sandra)
write.csv(filtered.brain.markers.sandra, "filtered_Brain_EC_markers_fc1_padj005.csv", row.names = TRUE)
DotPlot(combined_cell, features = slc_targets.sandra, group.by = "organ")
library(Seurat)
DotPlot(combined_cell, features = slc_targets.sandra, group.by = "organ")
slc_targets.sandra <- filtered.brain.markers.sandra$Gene
DotPlot(combined_cell, features = slc_targets.sandra, group.by = "organ")
DotPlot(combined_cell, features = slc_targets.sandra, group.by = "organ") +
coord_flip()
dot_plot <- DotPlot(combined_cell, features = slc_targets.sandra, group.by = "organ") +
labs(x = "Organ", y = "Gene") +
coord_flip()
ggsave("dot_plot_brain.pdf", plot = dot_plot, width = 8, height = 12)
View(filtered.brain.markers.sandra)
dot_plot <- DotPlot(combined_cell, features = slc_targets.sandra[1:40], group.by = "organ") +
labs(x = "Organ", y = "Gene") +
coord_flip()
ggsave("dot_plot_brain.pdf", plot = dot_plot, width = 7, height = 10)
dot_plot <- DotPlot(combined_cell, features = slc_targets.sandra[1:30], group.by = "organ") +
labs(x = "Organ", y = "Gene") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
coord_flip()
ggsave("dot_plot_brain.pdf", plot = dot_plot, width = 7, height = 10)
dot_plot <- DotPlot(combined_cell, features = slc_targets.sandra[1:27], group.by = "organ") +
labs(x = "Organ", y = "Gene") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
coord_flip()
ggsave("dot_plot_brain.pdf", plot = dot_plot, width = 7, height = 10)
slc_targets.sandra
